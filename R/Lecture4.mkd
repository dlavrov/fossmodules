




### Raster Package

Great for raster processing in R.  Manages memory utilization by writing to temp files.

    install.packages(c('raster','rgdal','rasterVis'))

### Object Types

* RasterLayer - a single 2-d layer along with projection and coordinate metadata
* RasterStack - Collection of raster layers with same extent
* RasterBrick - Can only reference a single file (multiband TIF etc)

### More information

[Introduction to the `raster` package](http://cran.r-project.org/web/packages/raster/vignettes/Raster.pdf)

### Opening Rasters

    setwd('/data/vol10/education/courses/Duckles_programming/MODIS/')
    library(raster)
    setwd('~/tmp/MODIS')
    fname <- 'MOD09A1.A2001081.h09v05.005.2007008144140.ndvi.tif'
    myrast1 <- raster(fname)

### Univariate stats

    cellStats(myrast1,sd)
    cellStats(myrast1,mean)
    cellStats(myrast1,max)
    cellStats(myrast1,min)
    cellStats(myrast1,quantile)
    # Diagnostic plots
    hist(myrast1)
    density(myrast1)
    persp(myrast1)
    contour(myrast1)


### Raster math

    fname2 <- 'MOD09A1.A2002081.h09v05.005.2007136114639.ndvi.tif'
    myrast2 <- raster(fname2)

    diff <- myrast2 - myrast1
    hist(as.vector(diff))

    rmean <- mean(myrast1,myrast2)
    sd <- sd(myrast1,myrast2)


### Manipulating MODIS HDFs with GDAL tools

In a bash shell:
    
    cd /data/vol10/education/courses/Duckles_programming/MODIS/compute_ndvi
    gdalinfo MOD09A1.A2013137.h09v05.005.2013146123056.hdf
    gdal_translate HDF4_EOS:EOS_GRID:"MOD09A1.A2013137.h09v05.005.2013146123056.hdf":MOD_Grid_500m_Surface_Reflectance:sur_refl_b01\
        MOD09A1.A2013137_b01.tif -co COMPRESS=LZW
    gdal_translate HDF4_EOS:EOS_GRID:"MOD09A1.A2013137.h09v05.005.2013146123056.hdf":MOD_Grid_500m_Surface_Reflectance:sur_refl_b02\
        MOD09A1.A2013137_b02.tif -co COMPRESS=LZW

### Import band data

Back in R:
    
    library(raster)
    setwd('/data/vol10/education/courses/Duckles_programming/MODIS/compute_ndvi')
    b01 <- raster('MOD09A1.A2013137_b01.tif')
    b02 <- raster('MOD09A1.A2013137_b02.tif')
    ndvi <- (b02 - b01) / (b01 + b02)
    ndvi_clean <- calc(ndvi, fun=function(x) { 
            x[x >= 1] <- NA; x[x <= -1] <- NA; return(x)
        }
    )

### NDVI Computed 

![NDVI for MOD09A1.A2013137](./images/ndvi_computed.png)

### High NDVI

    high_ndvi <- calc(ndvi_clean, fun=function(x) { x[x<0.3] <- NA; return(x) } )

![NDVI >0.3](./images/ndvi_gt03.png)

### Calc

Calc is used to perform a calculation on every cell in a raster

    calc(myrast1, function(x) { x[x > 0.5] <- NA; return(x) } )




### Land Cover Data (MCD12Q1)

Download data:

    http://e4ftl01.cr.usgs.gov/MOTA/MCD12Q1.051/2002.01.01/MCD12Q1.A2002001.h09v05.051.2012157223452.hdf

Extract band:
    
    # bash commands 
    gdalinfo MCD12Q1.A2002001.h09v05.051.2012157223452.hdf
    gdal_translate HDF4_EOS:EOS_GRID:"MCD12Q1.A2002001.h09v05.051.2012157223452.hdf":MOD12Q1:Land_Cover_Type_1\
        IGBP_LC_2002.tif -co COMPRESS=LZW



### Plot the landcover

[Lookup table (click +Layers)](https://lpdaac.usgs.gov/products/modis_products_table/mcd12q1)

    labels <- c("water","evergreen needleleaf", "evergreen broadleaf", 
        "deciduous needleleaf", "deciduious broadleaf", "mixed forest",
        "closed shrubland", "open shrubland", "woody savannas",
        "savannas", "grasslands", "permanent wetlands",
        "croplands", "urban and built-up", "cropland/natural vegetation mosaic",
        "snow and ice", "barren sparsely vegetated", "unclassified")

    colors <- c("blue","darkgreen","forestgreen","green3","green4",
        "lightgreen", "khaki4","khaki2", "darkorange3","darkorange4",
        "gray56","darkslategray","gold2","firebrick3","gold4",
        "ghostwhite","gray23","deeppink")
    
    landcover <- raster("IGBP_LC_2002.tif")
    plot(landcover,col=colors)


### Raster reProjection

    # Note, this takes a long time (several minutes).
    landcover_aea <- rasterProject(landcover, crs="+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs")

A good source for finding [Spatial Reference](spatialreference.org) projection info.


### Using extract to build timeseries to Plot ndvi
    library(raster)
    library(plyr)
    library(reshape2)

    mystack <- stack(list.files(pattern=".ndvi.tif"))
    
    extraction <- melt(extract(mystack,c(1,1))))

    formatextract <- function(extraction) { 
        names(extraction) <- c('cellindex','timestep','ndvi')
        yjd <- substr(extraction$timestep, 10, 16)
        extraction$year <- as.numeric(substr(yjd,0,4))
        extraction$jd <- as.numeric(substr(yjd,5,8))
        return(extraction)
    }

    extraction <- formatextract(extraction)
    ggplot(extraction, aes(x=jd, y=ndvi)) + geom_line(aes(group=factor(year)));


### Continuing

    fields <- shapefile('WheatFields.shp')
    points <- data.frame(x=fields$coords.x1,y=fields$coords.x2)
    extraction <- melt(extract(mystack, points))
    extraction <- formatextract(extraction)

    # single page
    pdf('~/somefile.pdf')
    ggplot(extraction, aes(x=jd, y=ndvi)) + geom_line(aes(group=factor(year))) 
        + facet_wrap(~ factor(cellindex))
    dev.off()

### Multipage PDF

    # multi-page PDF
    makeplot <- function(df) { 
        print(ggplot(df, aes(x=jd, y=ndvi, color=factor(year))) +
            geom_line(aes(group=factor(year))))
    }
    pdf('~/multipage.pdf')
    d_ply(extraction, .(cellindex), makeplot)
    dev.off()


### Advanced 
[Learn X in Y minutes where X=R](Lhttp://learnxinyminutes.com/docs/r) 








